{"ast":null,"code":"var _jsxFileName = \"F:\\\\Project\\\\reactCertification\\\\confusion\\\\src\\\\components\\\\DishdetailComponent.js\";\nimport React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenderDish({\n  dish\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        alt: dish.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          children: dish.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: dish.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n\n_c = RenderDish;\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled\",\n        children: comments.map(comm => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: comm.comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"--\", comm.author, \",\", new Intl.DateTimeFormat('en-US', {\n                year: 'numeric',\n                month: 'short',\n                day: '2-digit'\n              }).format(new Date(Date.parse(comm.date)))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 45\n            }, this)]\n          }, comm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_c2 = RenderComments;\n\nconst DishDetail = props => {\n  if (props.dishes != null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(RenderDish, {\n        dish: props.dishes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(RenderComments, {\n        comment: props.dishes.comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n};\n\n_c3 = DishDetail;\nexport default DishDetail;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RenderDish\");\n$RefreshReg$(_c2, \"RenderComments\");\n$RefreshReg$(_c3, \"DishDetail\");","map":{"version":3,"sources":["F:/Project/reactCertification/confusion/src/components/DishdetailComponent.js"],"names":["React","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","RenderDish","dish","image","name","description","RenderComments","comments","map","comm","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","id","DishDetail","props","dishes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,IADJ,EACUC,OADV,EACmBC,cADnB,EACmCC,QADnC,EAC6CC,QAD7C,EAEIC,SAFJ,QAGO,YAHP;;;AAKI,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAExB,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,2BACI,QAAC,IAAD;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,QAAA,GAAG,EAAED,IAAI,CAACE;AAAjD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAA,gCACI,QAAC,SAAD;AAAA,oBAAYF,IAAI,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAA,oBAAWF,IAAI,CAACG;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAdQJ,U;;AAeT,SAASK,cAAT,CAAwB;AAACC,EAAAA;AAAD,CAAxB,EAAoC;AAChC,MAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAEd,wBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBACKA,QAAQ,CAACC,GAAT,CAAcC,IAAD,IAAU;AACpB,8BACI;AAAA,oCACQ;AAAA,wBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADR,eAEQ;AAAA,+BAAMD,IAAI,CAACE,MAAX,OACf,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,gBAAAA,IAAI,EAAE,SAAR;AAAmBC,gBAAAA,KAAK,EAAE,OAA1B;AAAmCC,gBAAAA,GAAG,EAAE;AAAxC,eAAjC,EAAsFC,MAAtF,CAA6F,IAAIC,IAAJ,CAASA,IAAI,CAACC,KAAL,CAAWV,IAAI,CAACW,IAAhB,CAAT,CAA7F,CADe;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFR;AAAA,aAASX,IAAI,CAACY,EAAd;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBP,GAnBD,MAmBO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ;;MAzBQf,c;;AA2BT,MAAOgB,UAAU,GAAIC,KAAD,IAAW;AAC3B,MAAGA,KAAK,CAACC,MAAN,IAAgB,IAAnB,EACA,oBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,IAAI,EAAED,KAAK,CAACC;AAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAED,KAAK,CAACC,MAAN,CAAajB;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CADA,KAUA,oBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdD;;MAAOe,U;AAgBX,eAAeA,UAAf","sourcesContent":["import React from 'react';\r\nimport {\r\n    Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\n\r\n    function RenderDish({dish}) {\r\n\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    function RenderComments({comments}) {\r\n        if (comments != null) {\r\n            \r\n                return (\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <h4>Comments</h4>\r\n                        <ul className=\"list-unstyled\">\r\n                            {comments.map((comm) => {\r\n                                return (\r\n                                    <li key={comm.id} >\r\n                                            <p>{comm.comment}</p>\r\n                                            <p>--{comm.author},\r\n                            {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comm.date)))}</p>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                );\r\n\r\n        } else {\r\n            return (\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const  DishDetail = (props) => {\r\n        if(props.dishes != null)\r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dishes}/>\r\n                    <RenderComments comment={props.dishes.comments}/>\r\n                </div>\r\n            </div>\r\n        );\r\n        else\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n\r\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}